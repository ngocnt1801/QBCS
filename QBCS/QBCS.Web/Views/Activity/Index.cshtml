@*@model IEnumerable<QBCS.Service.ViewModel.LogViewModel>
    @using QBCS.Service.Enum*@
@using QBCS.Service.ViewModel
@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int counter = 0;
    var user = (UserViewModel)Session["user"];
    int userId = user != null ? user.Id : 0;

}

@Styles.Render("~/bundles/content/datatables")

<h2>Activity</h2>

<div class="card shadow mb-4">
    <div class="card-body">
        <div class="table-responsive text-custom">
            @if (ViewBag.targetId != null)
            {
                <input id="targetId" value="@ViewBag.targetId" type="hidden"/>
            }
            @if (ViewBag.importId != null)
            {
                <input id="importId" value="@ViewBag.importId" type="hidden"/>
            }
            @if (ViewBag.isUser != null && userId != 0)
            {
                <input id="userId" value="@userId" type="hidden"/>
            }
            <table class="table table-bordered table-hover text-custom table-striped" id="tableActivity" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>User</th>
                        <th>Date</th>
                        <th>Message</th>
                        <th>Action</th>

                    </tr>
                </thead>

                <tbody>

                    @*@foreach (var item in Model)
                        {
                            if (item.LogDate != DateTime.MinValue)
                            {
                                counter++;

                                <tr>
                                    <td>
                                        @counter
                                    </td>
                                    <td>
                                            @if (item.Action.Equals("Update") && item.QuestionNew != null)
                                            {
                                                @item.QuestionNew.QuestionCode
                                            }else{
                                            <p>N/A</p>
                                            }

                                        </td>
                                    <td>
                                        @item.Fullname
                                    </td>
                                    <td>
                                        @item.LogDate
                                    </td>
                                    <td>
                                        @if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Cancel)) || item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Save)))
                                        {
                                            @item.Action <text> Import File </text>@item.TargetId<text>st</text>
                                        }
                                        else if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Import)))
                                        {
                                            @item.Action <text> File </text>@item.TargetId<text>st</text>
                                        }
                                        else if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Move)))
                                        {
                                            @item.Action <text> Question </text>@item.TargetId<text>st</text>
                                        }
                                        else if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Update)))
                                        {
                                            @item.Message
                                        }
                                        else
                                        {
                                            @item.Message @(item.TargetId.HasValue && item.TargetId.Value != 0 ? " " + item.TargetId.ToString() + "st" : "")
                                        }

                                    </td>
                                    <td>
                                        @if (item.Action != null)
                                        {
                                            if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Import)) && User.CheckPermission(typeof(QBCS.Web.Controllers.ActivityController), nameof(QBCS.Web.Controllers.ActivityController.GetListTargetByID)))
                                            {
                                                <a href="@Url.Action("GetListTargetByID", "Activity", new { id = item.Id, targetId = item.TargetId })" class="btn btn-primary mb-2 col-md-12 spinner-loading">Detail</a>
                                            }
                                            if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Update)) && item.TargetName.Equals("Question") && User.CheckPermission(typeof(QBCS.Web.Controllers.ActivityController), nameof(QBCS.Web.Controllers.ActivityController.GetUpdateActivityById)))
                                            {
                                                <a href="@Url.Action("GetUpdateActivityById", "Activity", new { id = item.Id })" class="btn btn-primary mb-2 col-md-12 spinner-loading">Detail</a>
                                            }
                                            //&& User.CheckPermission(typeof(QBCS.Web.Controllers.ActivityController), nameof(QBCS.Web.Controllers.ActivityController.GetMoveActivityById))
                                            if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Move)) && item.TargetName.Equals("Question"))
                                            {
                                                <a href="@Url.Action("GetMoveActivityById", "Activity", new { id = item.Id })" class="btn btn-primary mb-2 col-md-12 spinner-loading">Detail</a>
                                            }

                                            //&& User.CheckPermission(typeof(QBCS.Web.Controllers.ActivityController), nameof(QBCS.Web.Controllers.ActivityController.GetMoveActivityById))
                                            if (item.Action.Equals(Enum.GetName(typeof(LogEnum), LogEnum.Update)) && item.TargetName.Equals("Rule"))
                                            {
                                                <a href="@Url.Action("Index", "Rule")" class="btn btn-primary mb-2 col-md-12 spinner-loading">Detail</a>
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-custom">N/A</p>
                                        }


                                    </td>
                                </tr>
                            }
                        }*@
                </tbody>
            </table>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/script/datatables")
@Scripts.Render("~/bundle/scripts/tableActivity")