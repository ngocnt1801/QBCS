@model QBCS.Service.ViewModel.CourseStatDetailViewModel
@{
    ViewBag.Title = "CourseDetailStatistic";
}
<link rel="stylesheet" href="~/Content/chartjs/Chart.css" />
<script src="~/Scripts/myjs/chartjs/Chart.min.js"></script>
@if (Model.Easy != 0 || Model.Medium != 0 || Model.Hard != 0)
{
    <div class="col-lg-10">
        <canvas id="myChart"></canvas>
    </div>
    <br />
    <div class="col-lg-10 text-custom">
        @if (Model != null && Model.Suggestion != null && Model.Suggestion.Count != 0)
        {
            <text>We suggest: </text> <br />
            foreach (var suggest in Model.Suggestion)
            {
                <text>@suggest</text> <br />
            }
        }
    </div>
    <script>
        var data = [{
            data: [@Model.Null,  @Model.Easy, @Model.Medium, @Model.Hard],

            backgroundColor: [
                'rgb(211,211,211)',
                'rgb(95,183,229)',
                'rgb(253,212,48)',
                'rgb(220,83,86)'
            ]
        }];
        var sum = @Model.Null + @Model.Easy + @Model.Medium + @Model.Hard;
        var options = {
            tooltips: {
                enabled: false
            },
            plugins: {
                datalabels: {
                    formatter: (value, ctx) => {
                        return value + " (" + sum + "%)";
                    },
                    color: '#fff',
                }
            }
        };
                        debugger;
        var ctx = document.getElementById('myChart');
    var myPieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: [
                'No Level',
                'Easy',
                'Medium',
                'Hard'
            ],
            datasets: data
        },
        options: {
            tooltips: {
              callbacks: {
                    label: function (tooltipItem, data) {
                      var percentFixed = (data['datasets'][0]['data'][tooltipItem['index']] / sum * 100).toFixed(1);
                      var percentFloor = Math.floor(data['datasets'][0]['data'][tooltipItem['index']] / sum * 100);
                      if (percentFixed - percentFloor == 0) {
                          return data['labels'][tooltipItem['index']] + ': ' + percentFloor + '% (' + data['datasets'][0]['data'][tooltipItem['index']] + ')';
                      } else {
                          return data['labels'][tooltipItem['index']] + ': ' + percentFixed + '% (' + data['datasets'][0]['data'][tooltipItem['index']] + ')';
                      }
                        
                }
              }
            }
          }
    });
    </script>
}
else
{
    <div class="text-custom col-md-7"><h4>There is no question to give statistic</h4> </div>
}

