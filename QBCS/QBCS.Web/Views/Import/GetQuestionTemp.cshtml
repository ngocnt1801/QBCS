@model QBCS.Service.ViewModel.QuestionTempViewModel

@{
    ViewBag.Title = "Edit Question";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string alpha = "ABCDEFGHIKLMNOPQRSTUVWXYZ";
    int counter = 0;
}
@Styles.Render("~/bundle/content/checkbox")
@Styles.Render("~/bundle/content/detailquestion")
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Edit Question</h6>
    </div>

    <div class="card-body">
        <div class="container text-custom">
            <a href="@Url.Action("EditQuestionTempWithTextbox","Import", new { id = Model.Id})">Edit Question with textbox</a>
            @using (Html.BeginForm("EditQuestion", "Import", FormMethod.Post, new { @class = "form-group" }))
            {

                <h5>Question</h5>
                <div class="customs-display customs-display-area question-custom mb-2" contenteditable="true" data-for="#hidden-question-content">
                    @Html.DisplayFor(m => m.QuestionContent)
                </div>
                <div id="question-image-container">
                    @if (Model.Images != null)
                    {
                        <label>Image in Question</label>
                        foreach (var img in Model.Images)
                        {
                            <p>
                                <span class="float-right delete-image" data-delete="#ques-img-@img.Id"><i class="fa fa-times-circle text-danger"></i></span>
                                <img class="exam-image mt-2" onclick="img_zoom(this)" src="data:image/png;base64, @img.Source" />
                                <input type="hidden" name="ImagesInput" value="@img.Source" />
                            </p>
                        }

                    }
                </div>
                <span class="btn btn-primary btn-img mt-2">
                    Add Image <input id="uploadImage" type="file" accept="image/*" name="image" multiple />
                </span>
                <div id="question-upload" class="row">
                    <output id="result" />
                </div>
                <input type="hidden" name="QuestionContent" value="" id="hidden-question-content" />

                <h5>Options</h5>
                <div id="option-list-container">

                    @for (var i = 0; i < Model.Options.Count; i++)
                    {
                        @Html.EditorFor(m => m.Options[i], new { index = i + 1 })
                    }
                </div>
                <div class="row mb-4">
                    <span class="text-primary add-option"><i class="fa fa-plus-circle"></i> Add Option</span>
                </div>




                @Html.HiddenFor(model => model.ImportId)
                @Html.HiddenFor(model => model.Id)
                <input type="submit" value="Update" name="Save" class="btn btn-primary float-right" id="btnUpdate" />
                <a class="btn btn-default float-right" href="@Url.Action("GetResult", "Import",new { importId  = Model.ImportId})">Cancel</a>
            }
        </div>
    </div>
</div>
@Scripts.Render("~/bundle/scripts/editquestion")
@Scripts.Render("~/bundle/scripts/processtext")