@model QBCS.Service.ViewModel.QuestionHistoryViewModel

@{
    ViewBag.Title = "GetExaminationHistory";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int counter = 0;
    string alpha = "ABCDEFGHIKLMNOPQRSTUVWXYZ";
}
@Styles.Render("~/bundles/content/datatables")

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h5 class="m-0 font-weight-bold text-primary">Question</h5>
    </div>
    <div class="card-body text-custom">
        <p>
            <b>Question Code:</b> @Model.Question.QuestionCode
        </p>
        <p>
            <b>Category:</b> @Model.Question.Category
        </p>
        <p>
            <b>Level:</b>  @(Model.Question.LevelId != 0 ? ((QBCS.Service.Enum.LevelEnum)Model.Question.LevelId).ToString() : "[No level]")
        </p>
        <br />
        <p class="customs-display-p">
            @Html.DisplayFor(m => m.Question.QuestionContent)

            @if (Model.Question.Images != null)
            {
                foreach (var image in Model.Question.Images)
                {
                <p><img src="data:image/png;base64, @image.Source" /></p>
            }
        }
            </p>
            @for (int i = 0; i < Model.Question.Options.Count; i++)
            {
                if (Model.Question.Options[i].IsCorrect)
                {
                    <p class="text-right-answer customs-display-p">
                        @(alpha[i] + "." )   @Html.DisplayFor(o => Model.Question.Options[i].OptionContent)
                    </p>
                    if (Model.Question.Options[i].Images != null)
                    {
                        foreach (var image in Model.Question.Options[i].Images)
                        {
                            <p><img src="data:image/png;base64, @image.Source" /></p>
                        }
                    }
                }
                else
                {
                    <p class="text-custom customs-display-p">
                        @(alpha[i] + "." )   @Html.DisplayFor(o => Model.Question.Options[i].OptionContent)
                    </p>
                    if (Model.Question.Options[i].Images != null)
                    {
                        foreach (var image in Model.Question.Options[i].Images)
                        {
                            <p><img src="data:image/png;base64, @image.Source" /></p>
                        }
                    }
                }

            }

        </div>
    </div>



    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h5 class="m-0 font-weight-bold text-primary">List of Examination</h5>
        </div>

        <div class="card-body">
            <div class="table-responsive text-custom">
                @if (Model.Examination.Count > 0)
                {
                    <table class="table table-bordered table-hover text-custom" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>No.</th>
                                <th>Code</th>
                                <th>
                                    Generated Date
                                </th>
                                <th>
                                    Exam Status
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.Examination)
                            {
                                <tr id="@item.Id">
                                    @{
                                        counter++;
                                    }
                                    <td>@counter</td>
                                    <td>
                                        @item.ExamCode
                                    </td>
                                    <td>
                                        @item.GeneratedDate
                                    </td>
                                    <td>
                                        @(item.IsDisable ? "Disabled" : "")
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                }
                else
                {
                    <h5>This question isn't in any examination</h5>
                }
            </div>
        </div>
    </div>
    @*<div style="text-align:right;margin-bottom:10px">
        <a href="@Url.Action("GetHistoryCourse", "Examination", new { courseId = Model.Question.CourseId})"
           class="btn btn-outline-light border-dark text-custom mr-2 btn-spinner">
            Back to list
        </a>
    </div>*@
    @Scripts.Render("~/bundles/script/datatables")
    @Scripts.Render("~/bundle/scripts/processtext")
