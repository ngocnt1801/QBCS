@model IEnumerable<QBCS.Service.ViewModel.QuestionTempViewModel>
@{
    ViewBag.Title = "ListQuestion";
    int counter = 0;
    string alpha = "ABCDEFGHIKLMNOPQRSTUVWXYZ";
}

<div class="card shadow mb-4">

    <div class="card-body">
        <div class="table-responsive text-custom">
            <table class="table table-bordered text-custom" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Question</th>
                        <th>Duplicated With</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var borderLeft = "";
                        var action = "";
                        if (item.Status == DuplicateQuestion.Entity.StatusEnum.Delete)
                        {
                            borderLeft = "border-left-danger";
                        }
                        else if (item.Status == DuplicateQuestion.Entity.StatusEnum.Editable)
                        {
                            borderLeft = "border-left-warning";
                            action = "editableTemp";
                        }
                        else if (item.Status == DuplicateQuestion.Entity.StatusEnum.Success)
                        {
                            borderLeft = "border-left-success";
                        }
                        <tr class="@action" data-id="@item.Id">
                            @{
                                counter++;
                            }
                            <td class="@borderLeft">@counter</td>
                            <td>
                                <p>@item.Code</p>
                                @item.QuesitonContent
                                @for (var i = 0; i < item.Options.Count; i++)
                                {
                                    if (item.Options[i].IsCorrect == true)
                                    {
                                        <div class="container-fluid text-right-answer">
                                            @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.Options[i].OptionContent)
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="container-fluid">
                                            @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.Options[i].OptionContent)
                                        </div>
                                    }

                                    <br />
                                }
                            </td>
                            <td>
                                @if (item.DuplicatedQuestion != null)
                                {
                                <p>Bank: @item.DuplicatedQuestion.CourseName - @item.DuplicatedQuestion.Code</p>
                                    @Html.DisplayFor(modeItem => item.DuplicatedQuestion.QuestionContent)
                                    for (var i = 0; i < item.DuplicatedQuestion.Options.Count; i++)
                                    {
                                        if (item.DuplicatedQuestion.Options[i].IsCorrect == true)
                                        {
                                            <div class="container-fluid text-right-answer">
                                                @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.DuplicatedQuestion.Options[i].OptionContent)
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="container-fluid">
                                                @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.DuplicatedQuestion.Options[i].OptionContent)
                                            </div>
                                        }

                                        <br />
                                    }
                                }
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

