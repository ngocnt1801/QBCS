@model IEnumerable<QBCS.Service.ViewModel.QuestionTempViewModel>
@using QBCS.Service.Enum

@{
    ViewBag.Title = "ListQuestion";
    int counter = 0;
    string alpha = "ABCDEFGHIKLMNOPQRSTUVWXYZ";
}

@if (Model != null && Model.Count() > 0)
{
    <div class="card shadow mb-4">

        <div class="card-body text-custom">
            <div class="table-responsive text-custom">
                <table class="table table-bordered text-custom" id="@ViewData["tableId"]" width="100%" cellspacing="0">
                    @*  id="datatable"  *@
                    <thead>
                        <tr>
                            <th>No.</th>
                            <th>Question</th>
                            <th>Duplicated With</th>
                            @if (Model.FirstOrDefault().Status == StatusEnum.DeleteOrSkip)
                            {
                                <th>Action</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var borderLeft = "";
                            var action = "";
                            if (item.Status == StatusEnum.Delete)
                            {
                                //borderLeft = "border-left-danger";
                            }
                            else if (item.Status == StatusEnum.Editable)
                            {
                                //borderLeft = "border-left-warning";
                                action = "editableTemp";
                            }
                            else if (item.Status == StatusEnum.Success)
                            {
                                //borderLeft = "border-left-success";
                            }
                        <tr class="@action" data-id="@item.Id">
                            @{
                                counter++;
                            }
                            <td class="@borderLeft">@counter</td>
                            <td>
                                <p class="text-custom">Question Code: @item.Code</p>
                                @item.QuesitonContent
                                @for (var i = 0; i < item.Options.Count; i++)
                                {
                                    if (item.Options[i].IsCorrect == true)
                                    {
                                        <div class="container-fluid text-right-answer">
                                            @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.Options[i].OptionContent)
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="container-fluid">
                                            @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.Options[i].OptionContent)
                                        </div>
                                    }

                                    <br />
                                }
                            </td>
                            <td>
                                @if (item.DuplicatedQuestion != null && item.Status != StatusEnum.NotCheck)
                                {
                                    <p class="text-custom">@item.DuplicatedQuestion.CourseName - @item.DuplicatedQuestion.Code</p>
                                    @Html.DisplayFor(modeItem => item.DuplicatedQuestion.QuestionContent)
                                    for (var i = 0; i < item.DuplicatedQuestion.Options.Count; i++)
                                    {
                                        if (item.DuplicatedQuestion.Options[i].IsCorrect == true)
                                        {
                                            <div class="container-fluid text-right-answer">
                                                @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.DuplicatedQuestion.Options[i].OptionContent)
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="container-fluid">
                                                @(alpha[i] + ".") @Html.DisplayFor(optionItem => item.DuplicatedQuestion.Options[i].OptionContent)
                                            </div>
                                        }

                                        <br />
                                    }
                                }
                            </td>
                            @if (Model.FirstOrDefault().Status == StatusEnum.DeleteOrSkip)
                            {
                                <td>
                                    <a href="@Url.Action("Skip", "Import", new { questionId = item.Id, importId =  ViewData["importId"]})" class="btn btn-primary mb-2 col-md-12">Skip</a>
                                    <a href="@Url.Action("Delete", "Import", new { questionId = item.Id, importId =  ViewData["importId"]})" class="btn btn-danger col-md-12">Delete</a>
                                </td>
                            }
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

}
else
{
    <h4>No record found here!</h4>
}


